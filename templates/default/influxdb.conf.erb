# Welcome to the InfluxDB configuration file.

# If hostname (on the OS) doesn't return a name that can be resolved by the other
# systems in the cluster, you'll have to set the hostname to an IP or something
# that can be resolved here.
# hostname = ""

bind-address = "0.0.0.0"

# Once every 24 hours InfluxDB will report anonymous data to m.influxdb.com
# The data includes raft name (random 8 bytes), os, arch and version
# We don't track ip addresses of servers reporting. This is only used
# to track the number of instances running and the versions which
# is very helpful for us.
# Change this option to true to disable reporting.
reporting-disabled = false


[authentication]
  enabled = <%= @config[:authentication][:enabled] %>

[admin]
  enabled = <%= @config[:admin][:enabled] %>
  port    = <%= @config[:admin][:port] %>              # binding is disabled if the port isn't set

[api]
  port     = <%= @config[:api][:port] %> # binding is disabled if the port isn't set
  <% if @config[:api][:ssl][:enabled] %>
  ssl-port = <%= @config[:api][:ssl][:port] %>    # Ssl support is enabled if you set a port and cert
  ssl-cert = "<%= @config[:api][:ssl][:cert_path] %>"# /path/to/cert.pem
  <% end %>
  # connections will timeout after this amount of time. Ensures that clients that misbehave
  # and keep alive connections they don't use won't end up connection a million times.
  # However, if a request is taking longer than this to complete, could be a problem.
  read-timeout = "5s"


[input_plugins]
  [input_plugins.graphite]
    enabled = <%= @config[:graphite][:enabled] %>
    # address = "0.0.0.0" # If not set, is actually set to bind-address.
    port = <%= @config[:graphite][:port] %>
    # name-position = "last"
    # name-separator = "-"
    # database = ""  # store graphite data in this database

  [input_plugins.collectd]
    enabled = <%= @config[:collectd][:enabled] %>
    # address = "0.0.0.0" # If not set, is actually set to bind-address.
    port = <%= @config[:collectd][:port] %>
    # database = ""
    # types.db can be found in a collectd installation or on github:
    # https://github.com/collectd/collectd/blob/master/src/types.db
    # typesdb = "/usr/share/collectd/types.db" # The path to the collectd types.db file

  [input_plugins.udp]
    enabled = <%= @config[:udp][:enabled] %>
    port = <%= @config[:udp][:port] %>
    #bind-address = "0.0.0.0"

    # Configure multiple udp apis each can write to separate db.  Just
    # repeat the following section to enable multiple udp apis on
    # different ports.
    [[input_plugins.udp_servers]] # array of tables
    enabled = false
    # port = 5551
    # database = "db1"

# Broker configuration. Brokers are nodes which participate in distributed
# consensus.
[broker]
  # Where the Raft logs are stored. The user running InfluxDB will need read/write access.
  dir  = "/tmp/influxdb/development/raft"
  port = 8086

[wal]
  dir = "<%= @config[:data][:path] %>/wal"
  flush-after = 1000 # the number of writes after which wal will be flushed, 0 for flushing on every write
  bookmark-after = 1000 # the number of writes after which a bookmark will be created

  # the number of writes after which an index entry is created pointing
  # to the offset of the first request, default to 1k
  index-after = 1000

  # the number of requests per one log file, if new requests came in a
  # new log file will be created
  requests-per-logfile = 10000

[storage]
  dir = "<%= @config[:data][:path] %>/db"
  # How many requests to potentially buffer in memory. If the buffer gets filled then writes
  # # will still be logged and once the local storage has caught up (or compacted) the writes
  # # will be replayed from the WAL
   write-buffer-size = 10000

  # the engine to use for new shards, old shards will continue to use the same engine
  default-engine = "leveldb"

  # The default setting on this is 0, which means unlimited. Set this to something if you want to
  # limit the max number of open files. max-open-files is per shard so this * that will be max.
  max-open-shards = 0

  # The default setting is 100. This option tells how many points will be fetched from LevelDb before
  # they get flushed into backend.
  point-batch-size = 100

  # The number of points to batch in memory before writing them to leveldb. Lowering this number will
  # reduce the memory usage, but will result in slower writes.
  write-batch-size = 5000000

  # The server will check this often for shards that have expired that should be cleared.
  retention-sweep-period = "10m"

[storage.engines.leveldb]
  # Maximum mmap open files, this will affect the virtual memory used by
  # the process
  max-open-files = 10000

  # LRU cache size, LRU is used by leveldb to store contents of the
  # uncompressed sstables. You can use `m` or `g` prefix for megabytes
  # and gigabytes, respectively.
  lru-cache-size = "200m"

[storage.engines.rocksdb]
  # Maximum mmap open files, this will affect the virtual memory used by
  # the process
  max-open-files = 10000

  # LRU cache size, LRU is used by rocksdb to store contents of the
  # uncompressed sstables. You can use `m` or `g` prefix for megabytes
  # and gigabytes, respectively.
  lru-cache-size = "200m"

  [storage.engines.hyperleveldb]
  # Maximum mmap open files, this will affect the virtual memory used by
  # the process
  max-open-files = 10000

  # LRU cache size, LRU is used by rocksdb to store contents of the
  # uncompressed sstables. You can use `m` or `g` prefix for megabytes
  # and gigabytes, respectively.
  lru-cache-size = "200m"

[storage.engines.lmdb]
  map-size = "100g"

[cluster]
# A comma separated list of servers to seed
# this server. this is only relevant when the
# server is joining a new cluster. Otherwise
# the server will use the list of known servers
# prior to shutting down. Any server can be pointed to
# as a seed. It will find the Raft leader automatically.

# Here's an example. Note that the port on the host is the same as the raft port.
# seed-servers = ["hosta:8090","hostb:8090"]

# Replication happens over a TCP connection with a Protobuf protocol.
# This port should be reachable between all servers in a cluster.
# However, this port shouldn't be accessible from the internet.

protobuf_port = 8099
protobuf_timeout = "2s" # the write timeout on the protobuf conn any duration parseable by time.ParseDuration
protobuf_heartbeat = "200ms" # the heartbeat interval between the servers. must be parseable by time.ParseDuration
protobuf_min_backoff = "1s" # the minimum backoff after a failed heartbeat attempt
protobuf_max_backoff = "10s" # the maxmimum backoff after a failed heartbeat attempt

# How many write requests to potentially buffer in memory per server. If the buffer gets filled then writes
# will still be logged and once the server has caught up (or come back online) the writes
# will be replayed from the WAL
write-buffer-size = 1000

# the maximum number of responses to buffer from remote nodes, if the
# expected number of responses exceed this number then querying will
# happen sequentially and the buffer size will be limited to this
# number
max-response-buffer-size = 100

# When queries get distributed out to shards, they go in parallel. This means that results can get buffered
# in memory since results will come in any order, but have to be processed in the correct time order.
# Setting this higher will give better performance, but you'll need more memory. Setting this to 1 will ensure
# that you don't need to buffer in memory, but you won't get the best performance.
concurrent-shard-query-limit = 10

# Raft configuration
[raft]
  # The raft port should be open between all servers in a cluster.
  # However, this port shouldn't be accessible from the internet.

  port = 8090

  # Where the raft logs are stored. The user running InfluxDB will need read/write access.
  dir  = "/opt/influxdb/shared/data/raft"

  debug = false

# election-timeout = "1s"

[logging]
  file   = "/var/log/influxdb/influxd.log" # Leave blank to redirect logs to stderr.
  level  = "info"
  write-tracing = false # If true, enables detailed logging of the write system.
  raft-tracing = false # If true, enables detailed logging of Raft consensus.

# InfluxDB can store statistics about itself. This is useful for monitoring purposes.
# # This feature is disabled by default, but if enabled, these statistics can be queried
# # as any other data.
# [statistics]
#   enabled = false
#   database = "_internal"         # The database to which the data is written.
#   retention-policy = "default"   # The retention policy within the database.
#   write-interval = "1m"          # Period between writing the data.

